{"ast":null,"code":"var _jsxFileName = \"/Users/austinhealy/Documents/GitHub/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js\";\nimport React, { useState } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n}; // const iNew = {\n//   color: \"\",\n//   code: { hex: \"\" },\n//   id: 0\n// }\n\nconst ColorList = ({\n  colors,\n  updateColors,\n  getColors\n}) => {\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor); // const [newColor, setNewColor] = useState(iNew);\n  // let newID = parseInt(colors.length);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is it saved right now?\n\n    let id = colorToEdit.id;\n    axiosWithAuth().put(`/api/colors/${id}`, colorToEdit).then(() => {\n      getColors();\n      setEditing(false);\n    }).catch(err => console.log(err));\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    // console.log(color);\n    let id = color.id; // console.log(id);\n\n    axiosWithAuth().delete(`/api/colors/${id}`, colorToEdit).then(() => {\n      setEditing(false);\n      getColors();\n    }).catch(err => console.log(err));\n  }; // const addColor = e => {\n  //   e.preventDefault();\n  //   // console.log(newID);\n  //   setNewColor({ ...newColor, id: newID })\n  //   console.log(newColor);\n  //   axiosWithAuth()\n  //     .post(\"/api/colors\", newColor)\n  //     .then(() => {\n  //       setNewColor(iNew);\n  //       getColors();\n  //     })\n  //     .catch(err => console.log(err))\n  // }\n\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"cancel\"))));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/austinhealy/Documents/GitHub/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","getColors","editing","setEditing","colorToEdit","setColorToEdit","editColor","saveEdit","e","preventDefault","id","put","then","catch","err","console","log","deleteColor","delete","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport  { axiosWithAuth }  from \"../utils/axiosWithAuth\";\n\n\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" },\n};\n// const iNew = {\n//   color: \"\",\n//   code: { hex: \"\" },\n//   id: 0\n// }\n\nconst ColorList = ({ colors, updateColors, getColors }) => {\n  \n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  // const [newColor, setNewColor] = useState(iNew);\n  // let newID = parseInt(colors.length);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault();\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is it saved right now?\n\n    let id = colorToEdit.id;\n    \n    axiosWithAuth()\n     .put(`/api/colors/${id}`, colorToEdit)\n     .then(() => {\n       getColors();\n       setEditing(false);\n     })\n     .catch(err => console.log(err))\n  };\n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n    // console.log(color);\n    let id = color.id;\n    // console.log(id);\n    axiosWithAuth()\n     .delete(`/api/colors/${id}`, colorToEdit)\n     .then(() => {\n       setEditing(false);\n       getColors();\n     })\n     .catch(err => console.log(err))\n  };\n\n  // const addColor = e => {\n  //   e.preventDefault();\n\n  //   // console.log(newID);\n  //   setNewColor({ ...newColor, id: newID })\n  //   console.log(newColor);\n\n\n  //   axiosWithAuth()\n  //     .post(\"/api/colors\", newColor)\n  //     .then(() => {\n  //       setNewColor(iNew);\n  //       getColors();\n  //     })\n  //     .catch(err => console.log(err))\n  // }\n\n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map(color => (\n          <li key={color.color} onClick={() => editColor(color)}>\n            <span>\n              <span className=\"delete\" onClick={e => {\n                    e.stopPropagation();\n                    deleteColor(color)\n                  }\n                }>\n                  x\n              </span>{\" \"}\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      {editing && (\n        <form onSubmit={saveEdit}>\n          <legend>edit color</legend>\n          <label>\n            color name:\n            <input\n              onChange={e =>\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\n              }\n              value={colorToEdit.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setColorToEdit({\n                  ...colorToEdit,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={colorToEdit.code.hex}\n            />\n          </label>\n          <div className=\"button-row\">\n            <button type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n        </form>\n      )}\n      {/* <div className=\"spacer\" /> */}\n\n      {/* stretch - build another form here to add a color */}\n{/* \n       <div className=\"add\" >Add a Color\n        <form onSubmit = {addColor}>\n          <h3>Add Color</h3>\n          <label>\n            Color name:\n            <input\n              onChange={e =>\n                setNewColor({ ...newColor, color: e.target.value })\n              }\n              value={newColor.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setNewColor({\n                  ...newColor,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={newColor.code.hex}\n            />\n          </label>\n          <button>add</button>\n        </form>\n      </div>\n      \n     */}\n     </div>\n  );\n}; \n\nexport default ColorList;"]},"metadata":{},"sourceType":"module"}