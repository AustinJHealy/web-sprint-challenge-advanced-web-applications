{"ast":null,"code":"var _jsxFileName = \"/Users/austinhealy/Documents/GitHub/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from \"../utils/axiosWithAuth\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = (e, props) => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n\n    console.log(colors.id);\n    axiosWithAuth().put(`http://localhost:5000/api/colors/${colors.id}`, colorToEdit);\n  }; // where is is saved right now?\n\n\n  const deleteColor = color => {\n    axiosWithAuth().delete(`http://localhost:5000/api/colors/${color.id}`);\n  };\n\n  useEffect(() => {\n    const greenYellow = {\n      color: \"greenyellow\",\n      code: {\n        hex: \"#adff2f\",\n        id: 12\n      }\n    };\n    axiosWithAuth().post(\"http://localhost:5000/api/colors\", greenYellow).then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.error(\"Server Error\", error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/austinhealy/Documents/GitHub/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","useEffect","axiosWithAuth","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","editColor","saveEdit","e","props","preventDefault","id","put","deleteColor","delete","greenYellow","post","then","res","catch","error","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport  { axiosWithAuth }  from \"../utils/axiosWithAuth\";\n\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" }\n};\n\nconst ColorList = ({ colors, updateColors }) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = (e, props) => {\n    e.preventDefault();\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    console.log(colors.id);\n    axiosWithAuth()\n    .put(`http://localhost:5000/api/colors/${colors.id}`, colorToEdit )\n  };\n    // where is is saved right now?\n\n\n  const deleteColor = color => {\n    axiosWithAuth().delete(`http://localhost:5000/api/colors/${color.id}`)\n\n  };\n\n\nuseEffect(() => {\n    const greenYellow = {\n      color: \"greenyellow\",\n      code: {\n        hex: \"#adff2f\",\n        id: 12,\n      },\n    };\n    \n    axiosWithAuth()\n      .post(\"http://localhost:5000/api/colors\", greenYellow)\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((error) => {\n        console.error(\"Server Error\", error);\n      });\n  }, []);\n  \n  \n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map(color => (\n          <li key={color.color} onClick={() => editColor(color)}>\n            <span>\n              <span className=\"delete\" onClick={e => {\n                    e.stopPropagation();\n                    deleteColor(color)\n                  }\n                }>\n                  x\n              </span>{\" \"}\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      {editing && (\n        <form onSubmit={saveEdit}>\n          <legend>edit color</legend>\n          <label>\n            color name:\n            <input\n              onChange={e =>\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\n              }\n              value={colorToEdit.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setColorToEdit({\n                  ...colorToEdit,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={colorToEdit.code.hex}\n            />\n          </label>\n          <div className=\"button-row\">\n            <button type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n        </form>\n      )}\n      <div className=\"spacer\" />\n      {/* stretch - build another form here to add a color */}\n    </div>\n  );\n};\n\nexport default ColorList;\n"]},"metadata":{},"sourceType":"module"}